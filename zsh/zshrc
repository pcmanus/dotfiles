if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

zinit light-mode for \
 atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" \
    zdharma-continuum/fast-syntax-highlighting \
 blockf \
    zsh-users/zsh-completions \
 atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions

zinit ice as"command" from"gh-r" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh"
zinit light starship/starship


# Options
setopt nobeep         # silence please
stty stop undef       # Disable ctrl-s to freeze terminal.
setopt noflowcontrol  # Possibly the same thing?
setopt extendedglob   # Extend ~, # and ^
setopt nomatch        # Show errors when a pattern has no match

# Case insensitive completions
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' '+m:{A-Z}={a-z}'
zstyle ':completion:*' menu select  # highlight choice when doing menu completion

# This allows completion to fall back on file completion when nothing else matches
zstyle :completion::::: completer _complete _files

autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

zle_highlight=('paste:none')


# Aliases

alias vim=nvim
alias vi=nvim
alias ls='exa -F --group-directories-first'
alias ll='exa -F --group-directories-first -l --icons --git'

export EDITOR=nvim
export VISUAL=nvim
export TERMINAL=alacritty

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

export NVM_DIR=~/.nvm
source "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# i = smart cases in searches
# F = exit immediately if fit on screen
# R = AINSI color support
# X = suppress alternate screen
export LESS=iFRX

# Replace `find` by `fd` for fzf
export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

#export JAVA_HOME=/opt/homebrew/Cellar/openjdk/19.0.1
export PATH="$HOME/.rover/bin:/opt/homebrew/opt/coreutils/libexec/gnubin:$HOME/.cargo/bin:$HOME/.bin:$PATH"
# Gives access to psql without install full postrgres
export PATH="/opt/homebrew/opt/libpq/bin:$PATH"
export MANPATH="/opt/homebrew/opt/coreutils/libexec/gnuman:$MANPATH"

test -e ~/.dircolors && eval `dircolors -b ~/.dircolors`

# Keybindings
bindkey -v  # vi mode

bindkey "^p" up-line-or-beginning-search
bindkey "^n" down-line-or-beginning-search

bindkey "^f" autosuggest-accept


eval "$(/opt/homebrew/bin/brew shellenv)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# The next line updates PATH and enable command completion for the Google Cloud SDK.
if [ -f '/Users/pcmanus/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/pcmanus/google-cloud-sdk/path.zsh.inc'; fi
if [ -f '/Users/pcmanus/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/pcmanus/google-cloud-sdk/completion.zsh.inc'; fi

[ -f ~/.priv.zsh ] && source ~/.priv.zsh
